{"version":3,"sources":["components/TronLinkGuide/index.js","utils/index.js","components/App/register.js","components/App/Table.js","components/App/Form.js","components/App/Content.js","components/App/header.js","components/App/Home.js","components/App/Upgrade.js","components/App/index.js","index.js","components/TronLinkGuide/TronLinkLogo.png"],"names":["WEBSTORE_URL","logo","react_default","a","createElement","className","src","TronLinkLogo","alt","TronLinkGuide","props","_props$installed","installed","href","target","rel","utils","tronWeb","contract","setTronWeb","_setTronWeb","Object","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","this","at","sent","stop","_x","apply","arguments","Register","React","Component","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","console","log","loading_reg","state","value","url_correct","referal_add","handleChange","bind","assertThisInitialized","login","referal","getQueryVariable","setState","getSponcerAddress","event","variable","vars","window","location","search","substring","split","i","length","pair","id","url","fetch","res","json","data1","success","address","Swal","title","type","my_address","defaultAddress","base58","message","_this2","onSubmit","preventDefault","multiSendTrx","onChange","placeholder","name","onClick","Home","loading","isRegisterred","error","dataFetched","data","owner","isLoggedin","user_data","tronrate","url_referral","loggedIn","Promise","resolve","tronWebState","ready","tries","timer","setInterval","TronWeb","clearInterval","hex","toHex","on","Utils","get_coin_rate","watch","err","result","referral_address","user_id","addr","cf_address","parseFloat","cf_amt","trx_cf_amt","parseInt","amount","transferTokenTest","send","feeLimit","callValue","tokenId","tokenValue","shouldPollResponse","then","_this3","register_process","catch","failed_payment","TRX","_referral","register","e","multisendEther","amt1","Fragment","Spinner","animation","variant","loader_reg","components_TronLinkGuide","Upgrade","get_id","trans_id","trans_data","sender_id","sender_status","upgrade_data","get_transaction_data","query","pos_amt","pos_parent_amount","placement_parent_amount","pos_parent","placement_parent","amount_total","Upgrade_with_id","App","react_router","react_router_dom","basename","path","pathname","substr","lastIndexOf","exact","component","ReactDOM","render","components_App","document","getElementById","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.57e363f2.chunk.js","sourcesContent":["import React from 'react';\n\nimport TronLinkLogo from './TronLinkLogo.png';\nimport './TronLinkGuide.scss';\n\nconst WEBSTORE_URL = 'https://chrome.google.com/webstore/detail/ibnejdfjmmkpcnlpebklmnkoeoihofec/';\n\nconst logo = (\n    <div className='logo'>\n        <img src={ TronLinkLogo } alt='TronLink logo' />\n    </div>\n);\n\nconst openTronLink = () => {\n    window.open(WEBSTORE_URL, '_blank');\n};\n\nconst TronLinkGuide = props => {\n    const {\n        installed = false\n    } = props;\n\n    if(!installed) {\n        return (\n            <div className='tronLink'>\n                <div className='info'>\n                    <h1>TronLink Required</h1>\n                    <p>\n                        To create a post or tip others you must install TronLink. TronLink is a TRON wallet for the browser\n                        that can be <a href={ WEBSTORE_URL } target='_blank' rel='noopener noreferrer'>installed from the Chrome Webstore</a>.\n                        Once installed, return back and refresh the page.\n                    </p>\n                </div>\n                { logo }\n            </div>\n        );\n    }\n\n    return (\n        <div className='tronLink hover'>\n            <div className='info'>\n                <h1>Log in Required</h1>\n                <p>\n                    TronLink is installed but you must first log in. Open TronLink from the browser bar and set up your\n                    first wallet or decrypt a previously-created wallet.\n                </p>\n            </div>\n            { logo }\n        </div>\n    );\n};\n\nexport default TronLinkGuide;","//const contractAddress = 'TJufiXZ2xk5m1ov1CLhMoCM8Pty4pGttQV'\nconst contractAddress = 'TDsoxHCffioMrBieJJXJLgx5FcthUf5M3i'\n\n\nconst utils = {\n    tronWeb: false,\n    contract: false,\n\n    async setTronWeb(tronWeb) {\n        this.tronWeb = tronWeb;\n        this.contract = await tronWeb.contract().at(contractAddress)\n    },\n\n};\n\nexport default utils;\n\n","import React, { Component, PropTypes } from 'react';\r\nimport { Spinner } from 'react-bootstrap';\r\nimport Swal from 'sweetalert2';\r\nimport Content from './Content';\r\n\r\n\r\nclass Register extends React.Component {\r\n   constructor(props) {\r\n    super(props);\r\n    console.log(props.loading_reg)\r\n   \r\n    \r\n    this.state = {value: ''};\r\n    this.state = {url_correct: false};\r\n    this.state = {referal_add: null};\r\n\r\n   \r\n    this.handleChange = this.handleChange.bind(this);\r\n     this.login = this.login.bind(this)\r\n    \r\n  }\r\n\r\n  async componentDidMount(){\r\n    const referal = this.getQueryVariable('id');\r\n   // console.log(referal);\r\n        if(referal === false)\r\n        {\r\n          this.setState({value:''})\r\n        }\r\n        else\r\n        {\r\n          this.getSponcerAddress(referal);\r\n          this.setState({value:this.state.referal_add})\r\n        }\r\n  }\r\n\r\n \r\n\r\n  handleChange(event) {\r\n    this.setState({value: event.target.value});\r\n  }\r\n\r\n\r\n     getQueryVariable(variable)\r\n{\r\n        var query = window.location.search.substring(1);\r\n       // console.log(query)//\"app=article&act=news_content&aid=160990\"\r\n        var vars = query.split(\"&\");\r\n      //  console.log(vars) //[ 'app=article', 'act=news_content', 'aid=160990' ]\r\n        for (var i=0;i<vars.length;i++) {\r\n                    var pair = vars[i].split(\"=\");\r\n                  //  console.log(pair)//[ 'app', 'article' ][ 'act', 'news_content' ][ 'aid', '160990' ] \r\n        if(pair[0] == variable){return pair[1];}\r\n         }\r\n         return(false);\r\n}\r\n\r\n\r\n    async  getSponcerAddress(id)\r\n    {\r\n        const url = \"https://www.bttbest.io/api/getsponcer?id=\"+id;\r\n      //  console.log(url);\r\n        const res = await fetch(url);\r\n        const data1 = await res.json();\r\n\r\n        if(data1.success == true)\r\n        {\r\n            this.setState({url_correct:true});\r\n          //  console.log(this.state.url_correct);\r\n            this.setState({referal_add:data1.address});\r\n           // console.log(this.state.referal_add);\r\n            this.setState({value:data1.address})\r\n        }\r\n\r\n        else\r\n        {\r\n            this.setState({url_correct:false});\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n     async login(){\r\n       \r\n\r\n        console.log(\"props\",this.props.loading_reg );\r\n\r\n         if(this.props.loading_reg == true)\r\n      {\r\n\r\n        Swal({\r\n                title: \"Registration In Process Wait\",\r\n                type: 'error'\r\n            });\r\n\r\n      }\r\n\r\n      else{\r\n       \r\n\r\n\r\n        const my_address = window.tronWeb.defaultAddress.base58;\r\n        const url = \"https://www.bttbest.io/api/fetch_user?user_id=\"+my_address;\r\n\r\n      //  console.log(url);\r\n       \r\n        const res = await fetch(url);\r\n         const data1 = await res.json();\r\n        \r\n       \r\n\r\n         if (data1.success == true) \r\n         {\r\n            \r\n\r\n            Swal({\r\n                title: data1.message,\r\n                type: 'success'\r\n            });\r\n\r\n            const url = 'https://www.bttbest.io/api/login?user_id='+my_address\r\n\r\n            window.location=url;\r\n         }\r\n         else\r\n         {\r\n             Swal({\r\n                title: data1.message,\r\n                type: 'error'\r\n            });\r\n         }\r\n\r\n       }\r\n         \r\n\r\n    }\r\n\r\n\r\n\r\n\r\n  \r\n\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n\r\n        \r\n           \r\n\r\n\r\n          <div className=\"card oppac\">\r\n          <div className=\"card-body\">\r\n          <h6 className=\"text-white\">My Tron Address {this.props.loading_reg}</h6>\r\n          <h4 className=\"text-white\">{this.props.address}</h4>\r\n        \t <form onSubmit={(event) => {\r\n        event.preventDefault()\r\n        this.props.multiSendTrx(this.state.value)\r\n      }}>\r\n        <div className='form-group'>\r\n         \r\n        <input type=\"text\" value={this.state.value} onChange={this.handleChange} id=\"referal_address\" placeholder=\"Enter Referral Address\" name=\"referal_address\" />\r\n       \r\n        </div>\r\n\r\n        <button type='submit'  className='btn btn-success m-3 btn-lg'>Register</button>\r\n\r\n        \r\n\r\n        <hr />\r\n      </form>\r\n\r\n      <button  className='btn btn-warning m-3 btn-lg' onClick={this.login}>Login</button>\r\n      </div>\r\n      </div>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nexport default Register;\r\n","import React from 'react'\n\nclass Table extends React.Component {\n  render() {\n    return (\n      <table className='table'>\n        <thead>\n          <tr>\n            <th>ID</th>\n            <th>Name of candidate</th>\n            <th>Votes</th>\n          </tr>\n        </thead>\n        <tbody >\n          {this.props.candidates.map((candidate) => {\n            return(\n              <tr key={candidate.id.toString()}>\n                <th>{candidate.id}</th>\n                <td>{candidate.name}</td>\n                <td>{candidate.voteCount}</td>\n              </tr>\n            )\n          })}\n        </tbody>\n      </table>\n    )\n  }\n}\n\nexport default Table;\n","import React from 'react'\n\nclass From extends React.Component {\n  render() {\n    return (\n      <form onSubmit={(event) => {\n        event.preventDefault()\n        this.props.castVote(this.candidateId.value)\n      }}>\n        <div className='form-group'>\n          <label>Candidate Selection</label>\n          <select ref={(input) => this.candidateId = input} className='form-control'>\n            {this.props.candidates.map((candidate) => {\n              return <option key={candidate.id.toString()} value={candidate.id}>{candidate.name}</option>\n            })}\n          </select>\n        </div>\n        <button type='submit' className='btn btn-primary'>Vote here</button>\n        <hr />\n      </form>\n\n     \n     \n    )\n  }\n}\n\nexport default From;\n","import React from 'react'\nimport Table from './Table'\nimport Form from './Form'\nimport Register from './register'\n\n\nclass Content extends React.Component {\n\n\n  render() {\n    return (\n      <div>\n        <Register \n        loader_reg = { this.props.loader_reg } \n        multiSendTrx={this.props.multiSendTrx} \n        address={this.props.address} \n        url_correct={this.props.url_correct} \n        referal_add={this.props.referal_add} \n        loading_reg = {this.props.loading_reg}\n        \n        />\n\n        \n       \n        \n        <hr/>\n        \n      </div>\n    )\n  }\n}\n\nexport default Content;\n","import React, { Component, PropTypes } from 'react';\r\n\r\nclass Header extends React.Component {\r\n   constructor(props) {\r\n    super(props);\r\n    this.state = {value: ''};\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    \r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({value: event.target.value});\r\n  }\r\n\r\n  \r\n\r\n\r\n    render() {\r\n        return (\r\n\r\n\r\n          <></>\r\n        \r\n            \r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport TronLinkGuide from 'components/TronLinkGuide';\r\nimport TronWeb from 'tronweb';\r\nimport Utils from 'utils';\r\nimport Swal from 'sweetalert2';\r\nimport Register from './register';\r\nimport header from './header';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\n\r\n\r\nimport './App.scss';\r\n\r\nconst FOUNDATION_ADDRESS = 'TXqqHYESMNUUXms7YT9hDqAr1pdyzMig4E';\r\n\r\nclass Home extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            address: '',\r\n            loading: false,\r\n            isRegisterred: false,\r\n            error: null,\r\n            dataFetched: false,\r\n            data: null,\r\n            owner:null,\r\n            isLoggedin:false,\r\n            user_data:null,\r\n            tronrate:null,\r\n            loading_reg:false,\r\n            url_referral:null,\r\n            url_correct:false,\r\n            referal_add:null,\r\n\r\n\r\n            tronWeb: {\r\n                installed: false,\r\n                loggedIn: false\r\n            },\r\n        }\r\n\r\n       \r\n        this.multiSendTrx = this.multiSendTrx.bind(this)\r\n\r\n    }\r\n\r\n    async componentDidMount() {\r\n\r\n\r\n\r\n\r\n\r\n        this.setState({ loading: true })\r\n        await new Promise(resolve => {\r\n            const tronWebState = {\r\n                installed: !!window.tronWeb,\r\n                loggedIn: window.tronWeb && window.tronWeb.ready\r\n\r\n            };\r\n\r\n\r\n\r\n            if (tronWebState.installed) {\r\n                this.setState({\r\n                    tronWeb: tronWebState\r\n                });\r\n\r\n                return resolve();\r\n            }\r\n\r\n            let tries = 0;\r\n\r\n            const timer = setInterval(() => {\r\n                if (tries >= 10) {\r\n                    const TRONGRID_API = 'https://api.trongrid.io';\r\n\r\n                    window.tronWeb = new TronWeb(\r\n                        TRONGRID_API,\r\n                        TRONGRID_API,\r\n                        TRONGRID_API\r\n                    );\r\n\r\n                    this.setState({\r\n                        tronWeb: {\r\n                            installed: false,\r\n                            loggedIn: false\r\n                        }\r\n                    });\r\n\r\n                    clearInterval(timer);\r\n                    return resolve();\r\n                }\r\n\r\n                tronWebState.installed = !!window.tronWeb;\r\n                tronWebState.loggedIn = window.tronWeb && window.tronWeb.ready;\r\n\r\n\r\n                if (!tronWebState.installed)\r\n                    return tries++;\r\n\r\n                this.setState({\r\n                    tronWeb: tronWebState\r\n                });\r\n\r\n                resolve();\r\n            }, 100);\r\n        });\r\n\r\n        if (!this.state.tronWeb.loggedIn) {\r\n            // Set default address (foundation address) used for contract calls\r\n            // Directly overwrites the address object as TronLink disabled the\r\n            // function call\r\n            window.tronWeb.defaultAddress = {\r\n                hex: window.tronWeb.address.toHex(FOUNDATION_ADDRESS),\r\n                base58: FOUNDATION_ADDRESS\r\n            };\r\n\r\n            window.tronWeb.on('addressChanged', () => {\r\n                if (this.state.tronWeb.loggedIn)\r\n                    return;\r\n\r\n                this.setState({\r\n                    tronWeb: {\r\n                        installed: true,\r\n                        loggedIn: true,\r\n                        address: window.tronWeb.defaultAddress\r\n                    }\r\n                });\r\n            });\r\n        }\r\n        await Utils.setTronWeb(window.tronWeb);\r\n        \r\n       \r\n        this.setState({ loading: false })\r\n       \r\n        this.get_coin_rate();\r\n        const referal = this.getQueryVariable('referal');\r\n        if(referal != false)\r\n        {\r\n            this.setState({url_referral:referal});\r\n            this.getSponcerAddress(referal);\r\n        }\r\n\r\n\r\n       \r\n\r\n\r\n    }\r\n\r\n\r\n   \r\n\r\n\r\n\r\n     startRegisterEventListener() {\r\n        Utils.contract.multiSendTrx().watch((err,result) => {\r\n\r\n            if (err) {\r\n                return console.log('Failed to bind the event', err);\r\n            }\r\n\r\n            else\r\n            {\r\n               \r\n            //    console.log(result);\r\n               \r\n\r\n            }\r\n\r\n           \r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n     getQueryVariable(variable)\r\n{\r\n        var query = window.location.search.substring(1);\r\n      //  console.log(query)//\"app=article&act=news_content&aid=160990\"\r\n        var vars = query.split(\"&\");\r\n      //  console.log(vars) //[ 'app=article', 'act=news_content', 'aid=160990' ]\r\n        for (var i=0;i<vars.length;i++) {\r\n                    var pair = vars[i].split(\"=\");\r\n                  //  console.log(pair)//[ 'app', 'article' ][ 'act', 'news_content' ][ 'aid', '160990' ] \r\n        if(pair[0] == variable){return pair[1];}\r\n         }\r\n         return(false);\r\n}\r\n\r\n\r\n    async  getSponcerAddress(id)\r\n    {\r\n        const url = \"https://www.trondesire.io/api/getsponcer?id=\"+id;\r\n      //  console.log(url);\r\n        const res = await fetch(url);\r\n        const data1 = await res.json();\r\n\r\n        if(data1.success == true)\r\n        {\r\n            this.setState({url_correct:true});\r\n         //   console.log(this.state.url_correct);\r\n            this.setState({referal_add:data1.address});\r\n          //  console.log(this.state.referal_add);\r\n        }\r\n\r\n        else\r\n        {\r\n            this.setState({url_correct:false});\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n   \r\n\r\n   \r\n\r\n\r\n\r\n    async register(referral_address, user_id) {\r\n\r\n      if(this.state.loading_reg == true)\r\n      {\r\n\r\n        Swal({\r\n                title: \"Already In Process Wait\",\r\n                type: 'error'\r\n            });\r\n\r\n      }\r\n\r\n      else\r\n      {\r\n\r\n        const url = \"https://www.bttbest.io/api/register_data_api?sponcer_id=\"+ referral_address +\"&user_id=\" + user_id;\r\n        console.log(url);\r\n        const res = await fetch(url);\r\n\r\n        const data1 = await res.json();\r\n    \r\n        this.setState({ data: data1 });\r\n        this.setState({ dataFetched: true });\r\n         this.setState({loading_reg:true});\r\n         //   console.log(this.state.loading_reg);\r\n\r\n\r\n      \r\n\r\n        if (this.state.data.success == true) {\r\n\r\n            const addr = [this.state.data.data.cf_address];\r\n\r\n\r\n            this.get_coin_rate();\r\n            const trx_rate = parseFloat(this.state.tronrate,10);\r\n\r\n          \r\n\r\n            const cf_amt = this.state.data.data.cf_amt;\r\n           // const og_amt = this.state.data.data.og_amt;\r\n          //  const admin_amt = this.state.data.data.admin_amt;\r\n\r\n          // const cf_amt = 2;\r\n         //  const og_amt = 0.1;\r\n         //  const admin_amt = 0.1;\r\n           \r\n            const trx_cf_amt = parseInt((cf_amt*1000000),10);\r\n          //  const trx_og_amt = parseInt((og_amt*1000000),10);\r\n           // const trx_admin_amt = parseInt((admin_amt*1000000),10);\r\n           \r\n         \r\n\r\n\r\n           const  amount = [trx_cf_amt];\r\n\r\n\r\n\r\n\r\n            const totalValue = trx_cf_amt;\r\n         \r\n         \r\n\r\n\r\n            \r\n\r\n            Utils.contract.transferTokenTest(addr, amount,1002000).send({\r\n                feeLimit: 100000000,\r\n                callValue: 0,\r\n                tokenId: 1002000, \r\n                tokenValue: amount,\r\n                shouldPollResponse: true,\r\n                \r\n                }).then(res => {\r\n                    this.register_process(user_id);\r\n                     \r\n                   \r\n                }).catch(err => {\r\n                    console.log(err);\r\n                    this.setState({loading_reg:false});\r\n                    this.failed_payment(user_id);\r\n                });\r\n        }\r\n\r\n        else{\r\n            this.setState({loading_reg:false});\r\n            Swal({\r\n                title: this.state.data.message,\r\n                type: 'error'\r\n            });\r\n\r\n        }\r\n\r\n      }\r\n\r\n       \r\n\r\n    }\r\n\r\n\r\n    async register_process(user_id)\r\n    {\r\n\r\n\r\n\r\n\r\n        const url = \"https://www.bttbest.io/api/register_api?user_id=\"+user_id;\r\n        console.log(url);\r\n        const res = await fetch(url);\r\n\r\n        const data1 = await res.json();\r\n    \r\n        this.setState({ data: data1 });\r\n        this.setState({ dataFetched: true });\r\n        this.setState({loading_reg:false})\r\n\r\n        if (this.state.data.success == true) {\r\n            Swal({\r\n                title: this.state.data.message,\r\n                type: 'success'\r\n            });\r\n        }\r\n\r\n        else\r\n        {\r\n            Swal({\r\n                title: this.state.data.message,\r\n                type: 'error'\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    async get_coin_rate()\r\n    {\r\n        \r\n        const url = \"https://min-api.cryptocompare.com/data/price?fsym=usd&tsyms=trx\";\r\n      \r\n        const res = await fetch(url);\r\n         const data1 = await res.json();\r\n        \r\n         this.setState({tronrate:data1.TRX});\r\n\r\n    }\r\n\r\n   async failed_payment(user_id)\r\n    {\r\n        const url = \"https://www.bttbest.io/api/deleteuser?user_id=\"+user_id;\r\n       \r\n        const res = await fetch(url);\r\n         const data1 = await res.json();\r\n        this.setState({ data: data1 });\r\n        this.setState({ dataFetched: true });\r\n         if (this.state.data.success == true) \r\n         {\r\n            Swal({\r\n                title: this.state.data.message,\r\n                type: 'error'\r\n            });\r\n         }\r\n    }\r\n\r\n   async activate_user(user_id)\r\n    {\r\n        const url = \"https://www.bttbest.io/api/activateuser?user_id=\"+user_id;\r\n     \r\n        const res = await fetch(url);\r\n         const data1 = await res.json();\r\n         this.setState({ data: data1 });\r\n         this.setState({ dataFetched: true });\r\n         if (this.state.data.success == true) \r\n         {\r\n            Swal({\r\n                title: this.state.data.message,\r\n                type: 'success'\r\n            });\r\n         }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    multiSendTrx(_referral) {\r\n\r\n        const my_address = window.tronWeb.defaultAddress.base58;\r\n        const referral_address = _referral;\r\n\r\n       \r\n\r\n\r\n        this.register(_referral, my_address);\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n   async login(){\r\n       \r\n        if(this.state.loading_reg == true)\r\n      {\r\n\r\n        Swal({\r\n                title: \"Registration In Process Wait\",\r\n                type: 'error'\r\n            });\r\n\r\n      }\r\n\r\n      else\r\n      {\r\n\r\n\r\n        const my_address = window.tronWeb.defaultAddress.base58;\r\n        const url = \"https://www.bttbest.io/api/fetch_user?user_id=\"+my_address;\r\n\r\n     //   console.log(url);\r\n       \r\n        const res = await fetch(url);\r\n         const data1 = await res.json();\r\n        \r\n       \r\n\r\n         if (data1.success == true) \r\n         {\r\n            \r\n\r\n            Swal({\r\n                title: data1.message,\r\n                type: 'success'\r\n            });\r\n\r\n            const url = 'https://www.bttbest.io/api/login?user_id='+my_address\r\n\r\n            window.location=url;\r\n         }\r\n         else\r\n         {\r\n             Swal({\r\n                title: data1.message,\r\n                type: 'error'\r\n            });\r\n         }\r\n\r\n       }\r\n         \r\n\r\n    }\r\n\r\n\r\n\r\n    multiSendTrx_demo(e) {\r\n        const address = ['TVWFvKMqVPymmDhn8hPHuB95UkKjVpBCGn','TXk8MdS9Umc5qivAUfEAYTGPv7v66RJrYX'];\r\n        let amt1 = 5000000;\r\n        let amt2 = 10000000;\r\n        const totalValue = amt1 + amt2;\r\n\r\n        let amount = [amt1, amt2];\r\n\r\n     \r\n\r\n        Utils.contract.multisendEther(address, amount).send({\r\n            shouldPollResponse: true,\r\n            callValue: totalValue\r\n        }).then(res => Swal({\r\n            title: 'Vote Casted',\r\n            type: 'success'\r\n        })).catch(err => Swal({\r\n            title: 'Vote Failed',\r\n            type: 'error'\r\n\r\n        }));\r\n\r\n    }\r\n\r\n   \r\n\r\n\r\n    render() {\r\n\r\n        if (!this.state.tronWeb.installed)\r\n            return <TronLinkGuide / > ;\r\n\r\n        if (!this.state.tronWeb.loggedIn)\r\n            return <TronLinkGuide installed / > ;\r\n\r\n        return ( <div className = 'row oppc'>\r\n            <div className = 'col-lg-12 text-center'>\r\n            <h1 className=\"text-white\"> BTTBEST < /h1> \r\n\r\n            <header></header>\r\n\r\n            {\r\n                this.state.loading ?\r\n              <>\r\n  <Spinner animation=\"grow\" variant=\"primary\" />\r\n  <Spinner animation=\"grow\" variant=\"secondary\" />\r\n  <Spinner animation=\"grow\" variant=\"success\" />\r\n  <Spinner animation=\"grow\" variant=\"danger\" />\r\n  <Spinner animation=\"grow\" variant=\"warning\" />\r\n  <Spinner animation=\"grow\" variant=\"info\" />\r\n  <Spinner animation=\"grow\" variant=\"light\" />\r\n  <Spinner animation=\"grow\" variant=\"dark\" /> \r\n  <h3 className=\"text-center text-white\">Loading...</h3>\r\n   </>\r\n :\r\n                    <Register\r\n                multiSendTrx = { this.multiSendTrx }\r\n                login = {this.login}\r\n                loader_reg = { this.state.loader_reg }\r\n                address = { window.tronWeb.defaultAddress.base58 }\r\n                url_correct = {this.state.url_correct}\r\n                referal_add = {this.state.referal_add}\r\n                loading_reg = {this.state.loading_reg}\r\n                />\r\n\r\n            } \r\n            </div> \r\n            {\r\n            this.state.loading_reg ?\r\n              <>\r\n        <div className=\"col-lg-12 text-center\">\r\n  <Spinner animation=\"grow\" variant=\"primary\" />\r\n  <Spinner animation=\"grow\" variant=\"secondary\" />\r\n  <Spinner animation=\"grow\" variant=\"success\" />\r\n  <Spinner animation=\"grow\" variant=\"danger\" />\r\n  <Spinner animation=\"grow\" variant=\"warning\" />\r\n  <Spinner animation=\"grow\" variant=\"info\" />\r\n  <Spinner animation=\"grow\" variant=\"light\" />\r\n  <Spinner animation=\"grow\" variant=\"dark\" /> \r\n  <h3 className=\"text-center text-white\">Loading... Please Wait 2 Mins for Account Registration After Accepting Transfer Request</h3>\r\n   </div>\r\n   </>\r\n\r\n :\r\n<></>\r\n}\r\n\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { Component, PropTypes } from 'react';\r\nimport { Spinner } from 'react-bootstrap';\r\nimport Swal from 'sweetalert2';\r\nimport Content from './Content';\r\nimport TronLinkGuide from 'components/TronLinkGuide';\r\nimport TronWeb from 'tronweb';\r\nimport Utils from 'utils';\r\n\r\n\r\nconst FOUNDATION_ADDRESS = 'TXqqHYESMNUUXms7YT9hDqAr1pdyzMig4E';\r\nclass Upgrade extends React.Component {\r\n   constructor() {\r\n    super();\r\n  \r\n    \r\n\r\n     this.state = {\r\n\r\n      tronWeb: {\r\n                installed: false,\r\n                loggedIn: false\r\n            },\r\n\r\n       value : '',\r\n       url_correct : false,\r\n       referal_add: null,\r\n       get_id : '',\r\n       trans_id: null,\r\n       trans_data : null,\r\n       sender_id : null,\r\n       sender_status : false,\r\n       upgrade_data : null,\r\n       loading_reg : false,\r\n\r\n\r\n        }\r\n\r\n\r\n   this.multiSendTrx = this.multiSendTrx.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n     this.login = this.login.bind(this);\r\n    \r\n  }\r\n\r\n  async componentDidMount(){\r\n  var id =  this.getQueryVariable('id');\r\n\r\n  this.setState({get_id:id})\r\n   \r\n    this.get_transaction_data(id);\r\n\r\n\r\n      this.setState({ loading: true })\r\n        await new Promise(resolve => {\r\n            const tronWebState = {\r\n                installed: !!window.tronWeb,\r\n                loggedIn: window.tronWeb && window.tronWeb.ready\r\n\r\n            };\r\n\r\n\r\n\r\n            if (tronWebState.installed) {\r\n                this.setState({\r\n                    tronWeb: tronWebState\r\n                });\r\n\r\n                return resolve();\r\n            }\r\n\r\n            let tries = 0;\r\n\r\n            const timer = setInterval(() => {\r\n                if (tries >= 10) {\r\n                    const TRONGRID_API = 'https://api.trongrid.io';\r\n\r\n                    window.tronWeb = new TronWeb(\r\n                        TRONGRID_API,\r\n                        TRONGRID_API,\r\n                        TRONGRID_API\r\n                    );\r\n\r\n                    this.setState({\r\n                        tronWeb: {\r\n                            installed: false,\r\n                            loggedIn: false\r\n                        }\r\n                    });\r\n\r\n                    clearInterval(timer);\r\n                    return resolve();\r\n                }\r\n\r\n                tronWebState.installed = !!window.tronWeb;\r\n                tronWebState.loggedIn = window.tronWeb && window.tronWeb.ready;\r\n\r\n\r\n                if (!tronWebState.installed)\r\n                    return tries++;\r\n\r\n                this.setState({\r\n                    tronWeb: tronWebState\r\n                });\r\n\r\n                resolve();\r\n            }, 100);\r\n        });\r\n\r\n        if (!this.state.tronWeb.loggedIn) {\r\n            // Set default address (foundation address) used for contract calls\r\n            // Directly overwrites the address object as TronLink disabled the\r\n            // function call\r\n            window.tronWeb.defaultAddress = {\r\n                hex: window.tronWeb.address.toHex(FOUNDATION_ADDRESS),\r\n                base58: FOUNDATION_ADDRESS\r\n            };\r\n\r\n            window.tronWeb.on('addressChanged', () => {\r\n                if (this.state.tronWeb.loggedIn)\r\n                    return;\r\n\r\n                this.setState({\r\n                    tronWeb: {\r\n                        installed: true,\r\n                        loggedIn: true,\r\n                        address: window.tronWeb.defaultAddress\r\n                    }\r\n                });\r\n            });\r\n        }\r\n        await Utils.setTronWeb(window.tronWeb);\r\n\r\n    console.log(this.state)\r\n      \r\n  }\r\n\r\n\r\n\r\n   async upgrade_process(id)\r\n    {\r\n\r\n\r\n\r\n\r\n        const url = \"https://www.bttbest.io/api/update_level_api?user_id=\"+id;\r\n        console.log(url);\r\n        const res = await fetch(url);\r\n\r\n        const data1 = await res.json();\r\n    \r\n        this.setState({ data: data1 });\r\n        this.setState({ dataFetched: true });\r\n        this.setState({loading_reg:false})\r\n\r\n        if (this.state.data.success == true) {\r\n            Swal({\r\n                title: this.state.data.message,\r\n                type: 'success'\r\n            });\r\n        }\r\n\r\n        else\r\n        {\r\n            Swal({\r\n                title: this.state.data.message,\r\n                type: 'error'\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n\r\n \r\n\r\n  handleChange(event) {\r\n    this.setState({value: event.target.value});\r\n  }\r\n\r\n\r\n     getQueryVariable(variable)\r\n{\r\n        var query = window.location.search.substring(1);\r\n       console.log(query)//\"app=article&act=news_content&aid=160990\"\r\n        var vars = query.split(\"&\");\r\n      //  console.log(vars) //[ 'app=article', 'act=news_content', 'aid=160990' ]\r\n        for (var i=0;i<vars.length;i++) {\r\n                    var pair = vars[i].split(\"=\");\r\n                  //  console.log(pair)//[ 'app', 'article' ][ 'act', 'news_content' ][ 'aid', '160990' ] \r\n        if(pair[0] == variable){return pair[1];}\r\n         }\r\n         return(false);\r\n}\r\n\r\n\r\n \r\n\r\n\r\n\r\n          async  get_transaction_data(id)\r\n    {\r\n        const url = \"https://www.bttbest.io/api/gettransaction?id=\"+id;\r\n       \r\n        const res = await fetch(url);\r\n        const data1 = await res.json();\r\n\r\n     \r\n\r\n        if(data1.success == true)\r\n        {\r\n            this.setState({url_correct:true});\r\n            this.setState({trans_data:data1});\r\n         \r\n           \r\n         console.log(\"id\",data1);\r\n           \r\n\r\n         if(this.state.trans_data.sender_id === window.tronWeb.defaultAddress.base58)\r\n         {\r\n            this.setState({sender_id: this.state.trans_data.sender_id})\r\n            this.setState({sender_status: true})\r\n           \r\n\r\n            \r\n            \r\n\r\n         }\r\n         else\r\n         {\r\n\r\n         }\r\n        }\r\n\r\n        else\r\n        {\r\n            this.setState({url_correct:false});\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    async Upgrade_with_id()\r\n    {\r\n\r\n      if(this.state.loading_reg == true)\r\n      {\r\n\r\n        Swal({\r\n                title: \"Upgradation In Process Wait\",\r\n                type: 'error'\r\n            });\r\n\r\n      }\r\n\r\n      else{\r\n         \r\n     \r\n        const id = this.state.get_id;\r\n        \r\n      \r\n        const url = \"https://www.bttbest.io/api/update_level_get_data?id=\"+id;\r\n        console.log(url);\r\n       \r\n        const res = await fetch(url,{\r\n\r\n        });\r\n        const data1 = await res.json();\r\n\r\n        this.setState({upgrade_data : data1})\r\n\r\n        console.log(data1);\r\n\r\n         if(data1.success == true)\r\n        {\r\n            this.setState({url_correct:true});\r\n       \r\n            this.setState({referal_add:data1.address});\r\n\r\n            this.setState({loading_reg:true});\r\n\r\n            console.log(this.state);\r\n\r\n             const pos_amt = parseInt((this.state.upgrade_data.data.pos_parent_amount*1000000),10);\r\n             const placement_parent_amount = parseInt((this.state.upgrade_data.data.placement_parent_amount*1000000),10);\r\n\r\n\r\n            const addr = [this.state.upgrade_data.data.pos_parent,this.state.upgrade_data.data.placement_parent];\r\n\r\n            const  amount = [pos_amt, placement_parent_amount];\r\n\r\n            const amount_total =  pos_amt +  placement_parent_amount;\r\n\r\n\r\n             Utils.contract.transferTokenTest(addr, amount,1002000).send({\r\n                feeLimit: 100000000,\r\n                callValue: 0,\r\n                tokenId: 1002000, \r\n                tokenValue : amount_total,\r\n                shouldPollResponse: true,\r\n                }).then(res => {\r\n                   \r\n                     this.Upgrade_with_id(this.state.get_id);\r\n                   \r\n                }).catch(err => {\r\n                    console.log(err);\r\n                    this.setState({loading_reg:false});\r\n                    \r\n                });\r\n        }\r\n          \r\n      \r\n        \r\n\r\n        else\r\n        {\r\n            this.setState({url_correct:false});\r\n            this.setState({loading_reg:true});\r\n        }\r\n\r\n\r\n        \r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n     async login()\r\n     {\r\n       \r\n\r\n      \r\n         if(this.state.loading_reg == true)\r\n      {\r\n\r\n        Swal({\r\n                title: \"Upgradation In Process Wait\",\r\n                type: 'error'\r\n            });\r\n\r\n      }\r\n\r\n      else{\r\n       \r\n\r\n\r\n        const my_address = window.tronWeb.defaultAddress.base58;\r\n        const url = \"https://www.bttbest.io/api/fetch_user?user_id=\"+my_address;\r\n\r\n     \r\n       \r\n         const res = await fetch(url);\r\n         const data1 = await res.json();\r\n        \r\n       \r\n\r\n         if (data1.success == true) \r\n         {\r\n            \r\n\r\n            Swal({\r\n                title: data1.message,\r\n                type: 'success'\r\n            });\r\n\r\n            const url = 'https://www.bttbest.io/api/login?user_id='+my_address\r\n\r\n            window.location=url;\r\n         }\r\n         else\r\n         {\r\n             Swal({\r\n                title: data1.message,\r\n                type: 'error'\r\n            });\r\n         }\r\n\r\n       }\r\n         \r\n\r\n    }\r\n\r\n\r\n    \r\n\r\n    multiSendTrx(_referral) {\r\n\r\n        const my_address = window.tronWeb.defaultAddress.base58;\r\n        const referral_address = _referral;\r\n\r\n       \r\n\r\n\r\n        this.register(_referral, my_address);\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n  \r\n\r\n\r\n\r\n\r\n    render() {\r\n\r\n\r\n\r\n        if (!this.state.tronWeb.installed)\r\n            return <TronLinkGuide / > ;\r\n\r\n        if (!this.state.tronWeb.loggedIn)\r\n            return <TronLinkGuide installed / > ;\r\n\r\n\r\n\r\n        return (\r\n\r\n        \r\n           <div className = 'row oppc'>\r\n            <div className = 'col-lg-12 text-center'>\r\n            <h1 className=\"text-white\"> BTTBEST < /h1> \r\n\r\n            <header></header>\r\n\r\n          <div className=\"card oppac\">\r\n          <div className=\"card-body\">\r\n          <h6 className=\"text-white\">My Tron Address </h6>\r\n          <h4 className=\"text-white\">{ window.tronWeb.defaultAddress.base58 }</h4>\r\n\r\n        {   \r\n        this.state.sender_status \r\n        ?\r\n\r\n           <>\r\n\r\n\r\n          <button className='btn btn-info m-3 btn-lg' onClick={this.Upgrade_with_id.bind(this)}> Upgrade </button>\r\n        \t \r\n\r\n            <button  className='btn btn-warning m-3 btn-lg' onClick={this.login}>Back To Dashboard</button> \r\n\r\n            </>\r\n\r\n        :\r\n            <>\r\n            <h4 className=\"text-center text-red\">Invalid Tronwallet</h4>\r\n             <button className='btn btn-info m-3 btn-lg' onClick={this.Upgrade_with_id.bind(this)}> Upgrade </button>\r\n             \r\n\r\n            <button  className='btn btn-warning m-3 btn-lg' onClick={this.login}>Back To Dashboard</button>\r\n            </>\r\n        }\r\n\r\n\r\n        {\r\n            this.state.loading_reg ?\r\n              <>\r\n        <div className=\"col-lg-12 text-center\">\r\n  <Spinner animation=\"grow\" variant=\"primary\" />\r\n  <Spinner animation=\"grow\" variant=\"secondary\" />\r\n  <Spinner animation=\"grow\" variant=\"success\" />\r\n  <Spinner animation=\"grow\" variant=\"danger\" />\r\n  <Spinner animation=\"grow\" variant=\"warning\" />\r\n  <Spinner animation=\"grow\" variant=\"info\" />\r\n  <Spinner animation=\"grow\" variant=\"light\" />\r\n  <Spinner animation=\"grow\" variant=\"dark\" /> \r\n  <h3 className=\"text-center text-white\">Loading... Please Wait 2 Mins for Account Registration After Accepting Transfer Request</h3>\r\n   </div>\r\n   </>\r\n\r\n :\r\n<></>\r\n}\r\n\r\n      \r\n      </div>\r\n      </div>\r\n\r\n      </div>\r\n\r\n      </div>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nexport default Upgrade;\r\n","import React from 'react';\nimport TronLinkGuide from 'components/TronLinkGuide';\nimport TronWeb from 'tronweb';\nimport Utils from 'utils';\nimport Swal from 'sweetalert2';\nimport Register from './register';\nimport Home from './Home';\nimport Upgrade from './Upgrade';\nimport header from './header';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Spinner } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\n\n\nimport './App.scss';\n\nconst FOUNDATION_ADDRESS = 'TXqqHYESMNUUXms7YT9hDqAr1pdyzMig4E';\n\nconst getBasename = path => path.substr(0, path.lastIndexOf('/'));\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            address: '',\n            loading: false,\n            isRegisterred: false,\n            error: null,\n            dataFetched: false,\n            data: null,\n            owner:null,\n            isLoggedin:false,\n            user_data:null,\n            tronrate:null,\n            loading_reg:false,\n            url_referral:null,\n            url_correct:false,\n            referal_add:null,\n\n\n            tronWeb: {\n                installed: false,\n                loggedIn: false\n            },\n        }\n\n       \n        this.multiSendTrx = this.multiSendTrx.bind(this)\n\n    }\n\n    async componentDidMount() {\n\n\n\n\n\n        this.setState({ loading: true })\n        await new Promise(resolve => {\n            const tronWebState = {\n                installed: !!window.tronWeb,\n                loggedIn: window.tronWeb && window.tronWeb.ready\n\n            };\n\n\n\n            if (tronWebState.installed) {\n                this.setState({\n                    tronWeb: tronWebState\n                });\n\n                return resolve();\n            }\n\n            let tries = 0;\n\n            const timer = setInterval(() => {\n                if (tries >= 10) {\n                    const TRONGRID_API = 'https://api.trongrid.io';\n\n                    window.tronWeb = new TronWeb(\n                        TRONGRID_API,\n                        TRONGRID_API,\n                        TRONGRID_API\n                    );\n\n                    this.setState({\n                        tronWeb: {\n                            installed: false,\n                            loggedIn: false\n                        }\n                    });\n\n                    clearInterval(timer);\n                    return resolve();\n                }\n\n                tronWebState.installed = !!window.tronWeb;\n                tronWebState.loggedIn = window.tronWeb && window.tronWeb.ready;\n\n\n                if (!tronWebState.installed)\n                    return tries++;\n\n                this.setState({\n                    tronWeb: tronWebState\n                });\n\n                resolve();\n            }, 100);\n        });\n\n        if (!this.state.tronWeb.loggedIn) {\n            // Set default address (foundation address) used for contract calls\n            // Directly overwrites the address object as TronLink disabled the\n            // function call\n            window.tronWeb.defaultAddress = {\n                hex: window.tronWeb.address.toHex(FOUNDATION_ADDRESS),\n                base58: FOUNDATION_ADDRESS\n            };\n\n            window.tronWeb.on('addressChanged', () => {\n                if (this.state.tronWeb.loggedIn)\n                    return;\n\n                this.setState({\n                    tronWeb: {\n                        installed: true,\n                        loggedIn: true,\n                        address: window.tronWeb.defaultAddress\n                    }\n                });\n            });\n        }\n        await Utils.setTronWeb(window.tronWeb);\n        \n       \n        this.setState({ loading: false })\n       \n        this.get_coin_rate();\n        const referal = this.getQueryVariable('referal');\n        if(referal != false)\n        {\n            this.setState({url_referral:referal});\n            this.getSponcerAddress(referal);\n        }\n\n\n       \n\n\n    }\n\n\n   \n\n\n\n     startRegisterEventListener() {\n        Utils.contract.multiSendTrx().watch((err,result) => {\n\n            if (err) {\n                return console.log('Failed to bind the event', err);\n            }\n\n            else\n            {\n               \n            //    console.log(result);\n               \n\n            }\n\n           \n\n        });\n\n    }\n\n\n     getQueryVariable(variable)\n{\n        var query = window.location.search.substring(1);\n       console.log(query)//\"app=article&act=news_content&aid=160990\"\n        var vars = query.split(\"&\");\n      //  console.log(vars) //[ 'app=article', 'act=news_content', 'aid=160990' ]\n        for (var i=0;i<vars.length;i++) {\n                    var pair = vars[i].split(\"=\");\n                  //  console.log(pair)//[ 'app', 'article' ][ 'act', 'news_content' ][ 'aid', '160990' ] \n        if(pair[0] == variable){return pair[1];}\n         }\n         return(false);\n}\n\n\n    async  getSponcerAddress(id)\n    {\n        const url = \"https://www.trondesire.io/api/getsponcer?id=\"+id;\n      //  console.log(url);\n        const res = await fetch(url);\n        const data1 = await res.json();\n\n        if(data1.success == true)\n        {\n            this.setState({url_correct:true});\n         //   console.log(this.state.url_correct);\n            this.setState({referal_add:data1.address});\n          //  console.log(this.state.referal_add);\n        }\n\n        else\n        {\n            this.setState({url_correct:false});\n        }\n\n\n    }\n\n\n   \n\n   \n\n\n\n    async register(referral_address, user_id) {\n\n      if(this.state.loading_reg == true)\n      {\n\n        Swal({\n                title: \"Already In Process Wait\",\n                type: 'error'\n            });\n\n      }\n\n      else\n      {\n\n        const url = \"https://www.bttbest.io/api/register_data_api?sponcer_id=\"+ referral_address +\"&user_id=\" + user_id;\n        console.log(url);\n        const res = await fetch(url);\n\n        const data1 = await res.json();\n    \n        this.setState({ data: data1 });\n        this.setState({ dataFetched: true });\n         this.setState({loading_reg:true});\n         //   console.log(this.state.loading_reg);\n\n\n      \n\n        if (this.state.data.success == true) {\n\n            const addr = [this.state.data.data.cf_address];\n\n\n            this.get_coin_rate();\n            const trx_rate = parseFloat(this.state.tronrate,10);\n\n          \n\n            const cf_amt = this.state.data.data.cf_amt;\n           // const og_amt = this.state.data.data.og_amt;\n          //  const admin_amt = this.state.data.data.admin_amt;\n\n          // const cf_amt = 2;\n         //  const og_amt = 0.1;\n         //  const admin_amt = 0.1;\n           \n            const trx_cf_amt = parseInt((cf_amt*1000000),10);\n          //  const trx_og_amt = parseInt((og_amt*1000000),10);\n           // const trx_admin_amt = parseInt((admin_amt*1000000),10);\n           \n         \n\n\n           const  amount = [trx_cf_amt];\n\n\n\n\n            const totalValue = trx_cf_amt;\n         \n         \n\n\n            \n\n            Utils.contract.transferTokenTest(addr, amount,1002000).send({\n                feeLimit: 100000000,\n                callValue: 0,\n                tokenId: 1002000, \n                tokenValue: amount,\n                shouldPollResponse: true,\n                \n                }).then(res => {\n                    this.register_process(user_id);\n                     \n                   \n                }).catch(err => {\n                    console.log(err);\n                    this.setState({loading_reg:false});\n                    this.failed_payment(user_id);\n                });\n        }\n\n        else{\n            this.setState({loading_reg:false});\n            Swal({\n                title: this.state.data.message,\n                type: 'error'\n            });\n\n        }\n\n      }\n\n       \n\n    }\n\n\n    async register_process(user_id)\n    {\n\n\n\n\n        const url = \"https://www.bttbest.io/api/register_api?user_id=\"+user_id;\n        console.log(url);\n        const res = await fetch(url);\n\n        const data1 = await res.json();\n    \n        this.setState({ data: data1 });\n        this.setState({ dataFetched: true });\n        this.setState({loading_reg:false})\n\n        if (this.state.data.success == true) {\n            Swal({\n                title: this.state.data.message,\n                type: 'success'\n            });\n        }\n\n        else\n        {\n            Swal({\n                title: this.state.data.message,\n                type: 'error'\n            });\n        }\n\n    }\n\n\n\n    async get_coin_rate()\n    {\n        \n        const url = \"https://min-api.cryptocompare.com/data/price?fsym=usd&tsyms=trx\";\n      \n        const res = await fetch(url);\n         const data1 = await res.json();\n        \n         this.setState({tronrate:data1.TRX});\n\n    }\n\n   async failed_payment(user_id)\n    {\n        const url = \"https://www.bttbest.io/api/deleteuser?user_id=\"+user_id;\n       \n        const res = await fetch(url);\n         const data1 = await res.json();\n        this.setState({ data: data1 });\n        this.setState({ dataFetched: true });\n         if (this.state.data.success == true) \n         {\n            Swal({\n                title: this.state.data.message,\n                type: 'error'\n            });\n         }\n    }\n\n   async activate_user(user_id)\n    {\n        const url = \"https://www.bttbest.io/api/activateuser?user_id=\"+user_id;\n     \n        const res = await fetch(url);\n         const data1 = await res.json();\n         this.setState({ data: data1 });\n         this.setState({ dataFetched: true });\n         if (this.state.data.success == true) \n         {\n            Swal({\n                title: this.state.data.message,\n                type: 'success'\n            });\n         }\n\n    }\n\n\n\n\n\n\n\n\n\n    multiSendTrx(_referral) {\n\n        const my_address = window.tronWeb.defaultAddress.base58;\n        const referral_address = _referral;\n\n       \n\n\n        this.register(_referral, my_address);\n\n\n\n\n\n    }\n\n\n  \n\n   async login(){\n       \n        if(this.state.loading_reg == true)\n      {\n\n        Swal({\n                title: \"Registration In Process Wait\",\n                type: 'error'\n            });\n\n      }\n\n      else\n      {\n\n\n        const my_address = window.tronWeb.defaultAddress.base58;\n        const url = \"https://www.bttbest.io/api/fetch_user?user_id=\"+my_address;\n\n     //   console.log(url);\n       \n        const res = await fetch(url);\n         const data1 = await res.json();\n        \n       \n\n         if (data1.success == true) \n         {\n            \n\n            Swal({\n                title: data1.message,\n                type: 'success'\n            });\n\n            const url = 'https://www.bttbest.io/api/login?user_id='+my_address\n\n            window.location=url;\n         }\n         else\n         {\n             Swal({\n                title: data1.message,\n                type: 'error'\n            });\n         }\n\n       }\n         \n\n    }\n\n\n\n    multiSendTrx_demo(e) {\n        const address = ['TVWFvKMqVPymmDhn8hPHuB95UkKjVpBCGn','TXk8MdS9Umc5qivAUfEAYTGPv7v66RJrYX'];\n        let amt1 = 5000000;\n        let amt2 = 10000000;\n        const totalValue = amt1 + amt2;\n\n        let amount = [amt1, amt2];\n\n     \n\n        Utils.contract.multisendEther(address, amount).send({\n            shouldPollResponse: true,\n            callValue: totalValue\n        }).then(res => Swal({\n            title: 'Vote Casted',\n            type: 'success'\n        })).catch(err => Swal({\n            title: 'Vote Failed',\n            type: 'error'\n\n        }));\n\n    }\n\n   \n\n\n    render() {\n        return (\n\n            <>\n\n           \n                  \n            <Switch>\n                <Router  basename={getBasename(window.location.pathname)}>\n\n                    <Route exact path=\"/\" component={Home} />\n                    <Route  exact path=\"/register\" component={Register} />\n                    <Route exact  path=\"/upgrade\" component={Upgrade} />\n\n\n                </Router>\n                </Switch>\n\n            </>\n       \n        );\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>, \n    document.getElementById('root')\n)","module.exports = __webpack_public_path__ + \"static/media/TronLinkLogo.d3a8f115.png\";"],"sourceRoot":""}